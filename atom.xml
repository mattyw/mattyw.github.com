<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[mattyw]]></title>
  <link href="http://mattyw.github.io/atom.xml" rel="self"/>
  <link href="http://mattyw.github.io/"/>
  <updated>2013-06-14T22:10:57+01:00</updated>
  <id>http://mattyw.github.io/</id>
  <author>
    <name><![CDATA[Matt Williams]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Unique contraint in mongo]]></title>
    <link href="http://mattyw.github.io/blog/2013/06/12/unique-contraint-in-mongo/"/>
    <updated>2013-06-12T12:11:00+01:00</updated>
    <id>http://mattyw.github.io/blog/2013/06/12/unique-contraint-in-mongo</id>
    <content type="html"><![CDATA[<p>My first post on my new blog, so let&rsquo;s keep it simple.</p>

<p>In sql databases you can specify unique constrains on certain columns, like this example from postgres:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">create</span> <span class="k">unique</span> <span class="k">index</span> <span class="n">idx_UniqRef</span> <span class="k">on</span> <span class="n">FooBar</span> <span class="p">(</span>
</span><span class='line'>       <span class="n">UniqRef</span> <span class="k">ASC</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>The question is: <strong>Is it possible to do this in a schema-less database like mongo?</strong>
Lets&#8217; start writing some code that we want to fail. For this I&rsquo;m going to use go and <a href="http://labix.org/mgo">Gustavo&rsquo;s mgo library</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="o">+</span><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'><span class="o">+</span>
</span><span class='line'><span class="o">+</span><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'><span class="o">+</span>  <span class="s">&quot;labix.org/v2/mgo&quot;</span>
</span><span class='line'><span class="o">+</span>  <span class="s">&quot;log&quot;</span>
</span><span class='line'><span class="o">+</span><span class="p">)</span>
</span><span class='line'><span class="o">+</span>
</span><span class='line'><span class="o">+</span><span class="kd">type</span> <span class="nx">FooBar</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'><span class="o">+</span>  <span class="nx">Name</span>   <span class="kt">string</span>
</span><span class='line'><span class="o">+</span>  <span class="nx">Age</span>    <span class="kt">int</span>
</span><span class='line'><span class="o">+</span>  <span class="nx">UniqId</span> <span class="kt">int</span>
</span><span class='line'><span class="o">+</span><span class="p">}</span>
</span><span class='line'><span class="o">+</span>
</span><span class='line'><span class="o">+</span><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'><span class="o">+</span>  <span class="nx">session</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">mgo</span><span class="p">.</span><span class="nx">Dial</span><span class="p">(</span><span class="s">&quot;127.0.0.1&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">+</span>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'><span class="o">+</span>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="o">+</span>  <span class="p">}</span>
</span><span class='line'><span class="o">+</span>
</span><span class='line'><span class="o">+</span>  <span class="nx">coll</span> <span class="o">:=</span> <span class="nx">session</span><span class="p">.</span><span class="nx">DB</span><span class="p">(</span><span class="s">&quot;test&quot;</span><span class="p">).</span><span class="nx">C</span><span class="p">(</span><span class="s">&quot;uniq_test&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">+</span>  <span class="nx">coll</span><span class="p">.</span><span class="nx">DropCollection</span><span class="p">()</span>
</span><span class='line'><span class="o">+</span>
</span><span class='line'><span class="o">+</span>  <span class="nx">a</span> <span class="o">:=</span> <span class="nx">FooBar</span><span class="p">{</span><span class="s">&quot;Foo&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">}</span>
</span><span class='line'><span class="o">+</span>  <span class="nx">b</span> <span class="o">:=</span> <span class="nx">FooBar</span><span class="p">{</span><span class="s">&quot;Bar&quot;</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">}</span>
</span><span class='line'><span class="o">+</span>
</span><span class='line'><span class="o">+</span>  <span class="nx">err</span> <span class="p">=</span> <span class="nx">coll</span><span class="p">.</span><span class="nx">Insert</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span>
</span><span class='line'><span class="o">+</span>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'><span class="o">+</span>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="o">+</span>  <span class="p">}</span>
</span><span class='line'><span class="o">+</span>  <span class="nx">err</span> <span class="p">=</span> <span class="nx">coll</span><span class="p">.</span><span class="nx">Insert</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span>
</span><span class='line'><span class="o">+</span>  <span class="k">if</span> <span class="nx">err</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'><span class="o">+</span>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="s">&quot;We wrote something but wanted to fail!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">+</span>  <span class="p">}</span>
</span><span class='line'><span class="o">+</span>
</span><span class='line'><span class="o">+</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nothing too fancy here:</p>

<ul>
<li>Create a connection to our collection

<ul>
<li>If the collection exists drop it (useful for iterating quickly on this test)</li>
</ul>
</li>
<li>Create two structures with a UniqId field duplicated</li>
<li>Insert both, if the second insert doesn&rsquo;t fail log an error</li>
</ul>


<p>If we run it as is, we see our failure</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>2013/06/12 13:14:51 We wrote something but wanted to fail!
</span><span class='line'><span class="nb">exit </span>status 1
</span></code></pre></td></tr></table></div></figure>


<p>Now we&rsquo;re in a position to start looking into a solution, and it turns out we don&rsquo;t
have to look far. Just like postgres mongo has indexes, we can create one using ensureIndex.
Here&rsquo;s how it looks in the mgo library:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'>    <span class="c1">//Let&#39;s try an index</span>
</span><span class='line'>    <span class="nx">index</span> <span class="o">:=</span> <span class="nx">mgo</span><span class="p">.</span><span class="nx">Index</span><span class="p">{</span>
</span><span class='line'>        <span class="nx">Key</span><span class="p">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">&quot;uniqid&quot;</span><span class="p">},</span>
</span><span class='line'>        <span class="nx">Unique</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">err</span> <span class="p">=</span> <span class="nx">coll</span><span class="p">.</span><span class="nx">EnsureIndex</span><span class="p">(</span><span class="nx">index</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This creates an index on our uniqid field and forces it to be unique. If we call this code
before we try inserting here&rsquo;s what we get</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Failed to write! E11000 duplicate key error index: test.uniq_test.<span class="nv">$uniqid_1</span>  dup key: <span class="o">{</span> : 1 <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>There we go, it also supports compound indexes which lets you specify multiple fields which must
be unique, but I&rsquo;m not going to cover that here. The <a href="http://docs.mongodb.org/manual/core/indexes/">mongo documention</a>
is a great source for more information</p>
]]></content>
  </entry>
  
</feed>
